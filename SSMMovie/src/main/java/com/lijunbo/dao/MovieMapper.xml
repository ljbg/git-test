<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lijunbo.dao.MovieMapper">



    <resultMap id="MoviesMap" type="Movies">
        <result property="moviesId" column="movies_id"/>
        <result property="moviesName" column="movies_name"/>
        <result property="moviesImg" column="movies_img"/>
        <result property="moviesDate" column="movies_date"/>
        <association property="moviesType" javaType="Types">
            <result property="typeId" column="movies_type_id"/>
            <result property="typeName" column="type_name"/>
        </association>
    </resultMap>


    <select id="findTotalCount" parameterType="map" resultType="Integer" >
       select count(*) from movies
       <where>
           <if test="movies_name != null">
             and  movies_name like  #{movies_name}
           </if>
           <if test="movies_type_id != null">
              and movies_type_id like #{movies_type_id}
           </if>
           <if test="movies_date != null ">
            and   movies_date like #{movies_date}
           </if>
       </where>
    </select>

    <select id="findByPage" parameterType="map" resultMap="MoviesMap">
       select * from movies LEFT JOIN movies_type ON movies_type_id = type_id
        <where>
            <if test="movies_name != null">
                movies_name like #{movies_name}
            </if>
            <if test="movies_type_id != null">
                and movies_type_id like #{movies_type_id}
            </if>
            <if test="movies_date != null ">
                and   movies_date like #{movies_date}
            </if>
        </where>
      limit #{start},#{pageSize}
    </select>

    <select id="findMovieById" resultMap="MoviesMap" >
         select * from movies where movies_id = #{movies_id}
    </select>

    <delete id="deleteById">
        delete from movies where movies_id = #{movies_id}
    </delete>

    <update id="updateMovie" parameterType="map">
        update  movies set  movies_name=#{movies_name},movies_date= #{movies_date},movies_type_id= #{movies_type_id} where movies_id = #{movies_id}
    </update>

    <insert id="addMovie" parameterType="map">
        insert into Movies (movies_name,movies_date,movies_img,movies_type_id)values(#{movies_name},#{movies_date},#{movies_img},#{movies_type_id})
    </insert>



</mapper>
